"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[740],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(f,s(s({ref:t},l),{},{components:n})):r.createElement(f,s({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=u;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var p=2;p<i;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1009:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:1},s="Recommended setup",a={unversionedId:"guides/typescript/setup",id:"guides/typescript/setup",title:"Recommended setup",description:"I've spent quite some time trying to set up the TypeScript bot based on Arcybot and got a few grey hairs in the process, so I decided to document the setup I've ended up with that actually worked.",source:"@site/docs/03-guides/02-typescript/00-setup.md",sourceDirName:"03-guides/02-typescript",slug:"/guides/typescript/setup",permalink:"/arcybot/docs/guides/typescript/setup",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"TypeScript",permalink:"/arcybot/docs/category/typescript"},next:{title:"Command types",permalink:"/arcybot/docs/category/command-types"}},c={},p=[{value:"File structure",id:"file-structure",level:3},{value:"TSConfig",id:"tsconfig",level:3},{value:"package.json",id:"packagejson",level:3}],l={toc:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"recommended-setup"},"Recommended setup"),(0,o.kt)("p",null,"I've spent quite some time trying to set up the TypeScript bot based on Arcybot and got a few grey hairs in the process, so I decided to document the setup I've ended up with that actually worked."),(0,o.kt)("h3",{id:"file-structure"},"File structure"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-md",metastring:'title="File structure"',title:'"File','structure"':!0},"main\n| lib\n| \u251c\u2500 index.ts\n| \u2514\u2500 commands\n|      \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 tsconfig.json\n\u2514\u2500\u2500 package.json\n")),(0,o.kt)("h3",{id:"tsconfig"},"TSConfig"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," file I'm using is based on the recommended TSConfig base for the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/tsconfig/bases/blob/main/bases/node16-strictest-esm.combined.json"},"strictest, ESM based Node 16 environment"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="tsconfig.json"',title:'"tsconfig.json"'},'{\n  "compilerOptions": {\n    "lib": ["es2021"],\n    "target": "es2021",\n    \n    "baseUrl": "./lib",\n    "module": "es2022",         /* Specify what module code is generated. */\n    "moduleResolution": "node",\n    "resolveJsonModule": true,\n    "isolatedModules": true,\n\n    "declaration": true,\n    "declarationDir": "dist",\n    "esModuleInterop": true,\n    "sourceMap": true,\n    "outDir": "dist",\n\n    "strict": true,             /* Enable all strict type-checking options. */\n    "skipLibCheck": true,       /* Skip type checking all .d.ts files. */\n  },\n  "include": ["lib/**/*"],\n  "exclude": ["node_modules"],\n}\n\n')),(0,o.kt)("h3",{id:"packagejson"},"package.json"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/tsc-alias"},(0,o.kt)("inlineCode",{parentName:"a"},"tsc-alias"))," to remove the headache of absolute module resolution"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/tsx"},(0,o.kt)("inlineCode",{parentName:"a"},"tsx"))," "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/nodemon"},(0,o.kt)("inlineCode",{parentName:"a"},"nodemon")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  // ...\n  "type": "module",\n  "engines": {\n    "node": ">=16"\n  },\n  "files": [\n    "dist/**/*"\n  ],\n  "main": "dist/index.js",\n  "types": "dist/index.d.ts",\n  "scripts": {\n    "build": "tsc --project tsconfig.json && tsc-alias -p tsconfig.json",\n    "dev": "nodemon --exec npx tsx lib/index.ts",\n    "start": "yarn build && node dist/index.js"\n  },\n  // ...\n  "devDependencies": {\n    "ts-node": "^10.9.1",\n  }\n}\n\n')))}d.isMDXComponent=!0}}]);